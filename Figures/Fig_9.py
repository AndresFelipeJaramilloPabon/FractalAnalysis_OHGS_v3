# -*- coding: utf-8 -*-
"""
Created on Fri Sep 18 13:56:43 2020

@author: Andrés Jaramillo
"""
# Andrés Felipe Jaramillo Pabón - 201713473

# Libraries


import itertools
import matplotlib.pyplot as plt 
from matplotlib import cm
from scipy.interpolate import griddata
from scipy.stats import linregress
import matplotlib.gridspec as gridspec
from mpl_toolkits.mplot3d import Axes3D
from mpl_toolkits.axes_grid1 import make_axes_locatable
import numpy as np
import math
from scipy.spatial import ConvexHull
from PIL import Image
import matplotlib.patches as mpatches


NumNodes=145
NumReservoirs=1
NumPipes=150

NodesID=[1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
69,
70,
71,
72,
73,
74,
75,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144,
145]

NodesX=[2702.7,
2688.8,
2707.4,
2718.9,
2759.8,
2689.1,
2671.8,
2637.1,
2570.8,
2560.3,
2584.3,
2571.8,
2465.1,
2440.4,
2234.7,
2169.2,
2142.2,
2109.1,
2111.2,
2217.2,
2207.7,
2267.3,
2390.5,
2423.9,
2506.4,
2572.9,
2620.6,
2450.3,
2662.9,
2173.28,
2101.5,
1992.1,
1987.4,
2059.8,
2053.1,
1956.1,
1947.1,
1935,
1914.7,
1890,
2026.8,
1872,
2011.9,
2016.3,
2149.2,
2170.7,
2334.7,
2335.9,
2004.4,
2116.3,
2112.8,
2097,
2083.6,
1989.5,
1744.1,
2085.6,
1928.1,
1843.1,
1779,
1841,
1806.6,
1946.8,
2075.6,
2173.5,
2175.4,
2171,
1769.3,
1650.1,
1616.4,
1595.5,
1542.7,
1510.3,
1398.4,
1372.3,
1498.5,
1475,
1561.8,
1575.9,
1713.9,
1705,
1646.8,
1639.6,
1546.9,
1543.3,
1421.3,
1359.6,
1340,
1399,
1434.7,
1458.4,
1496.6,
1888,
1871.8,
1761.6,
1749.7,
1670.2,
1659.7,
1598.4,
1587.1,
1482.6,
1502,
1409.1,
1382,
1316.5,
1325.5,
1242.5,
1252,
1156.3,
1165.5,
1104.2,
1207.4,
1187.1,
1167.5,
908.4,
1005.6,
1089.7,
933.1,
1358.8,
1308.1,
1296,
1344,
1364.48,
1328.57,
1318.68,
2521.3,
1393.5,
2325.2,
2259.65,
1242.32,
999.2,
990.1,
1079.2,
2583.3,
2570.8,
2464.1,
2439.4,
2233.7,
2168.2,
2141.2,
2069.17,
1103.2,
2179.1,
2173,
1320,
2185]

NodesY=[634.3,
646.5,
671,
693.8,
748.8,
821.1,
887.1,
913.6,
927.3,
956.7,
980.6,
989.7,
1002.7,
972.3,
1014.4,
1059.1,
1171.4,
1309,
1347.1,
1376.5,
1429.7,
1439.1,
1513.2,
1486.7,
1545,
1499.2,
1548.4,
1668.3,
1820.7,
1617.84,
1410.1,
1391.4,
1418.7,
1431.2,
1468.1,
1584.6,
1640,
1715.6,
1728.7,
1858,
1883.8,
1952.2,
1978.1,
1955.9,
1948.2,
1853.6,
1854.1,
2028,
2020.1,
2023.1,
2074.4,
2073.7,
2141.4,
2135.1,
2271.5,
2141.9,
2192.1,
2215.6,
2272.2,
2274.9,
2330.1,
2356.3,
2273.6,
2273.7,
2139.2,
2209.3,
1835.2,
1855.9,
1846.3,
2014.6,
2000,
2106.2,
2069.2,
2152.2,
2196.4,
2256.2,
2269,
2246.5,
2263.3,
2348.9,
2341.9,
2395,
2384.5,
2414.5,
2399.8,
2052.9,
1951.8,
1975.4,
1887.9,
1897.4,
1801.4,
1373.3,
1467.1,
1448.2,
1511.2,
1497.7,
1561.1,
1551.1,
1636.4,
1592.8,
1547.4,
1764.9,
1828.3,
1722.3,
1624.6,
1587.3,
1566.4,
1506.4,
1493.5,
1453.8,
1268.9,
1255.5,
1689.9,
1559.3,
1390,
1263.4,
1735.1,
1126.7,
1285.1,
1361.9,
1393.5,
1406.11,
1490.24,
1515.14,
1491.5,
1555.7,
2149.3,
2205.5,
1109.24,
1621,
1637.4,
1705.2,
980.6,
989.7,
1002.7,
972.3,
1014.4,
1059.1,
1171.4,
1145.89,
1452.8,
1581,
2270,
2000,
1582]

NodesZ=[2825,
2822,
2812,
2800,
2782,
2781,
2765,
2763,
2778,
2776,
2770,
2771,
2779,
2784,
2789,
2778,
2782,
2758,
2760,
2735,
2736.25,
2725.71,
2695,
2689,
2663.8,
2653,
2650,
2634,
2619,
2719,
2758,
2783.8,
2780,
2769,
2764.5,
2743.63,
2730,
2721,
2723,
2730,
2710,
2704.66,
2685,
2693.84,
2678,
2688,
2656.79,
2629,
2678,
2661,
2648,
2649,
2640,
2646.25,
2655,
2640,
2632,
2645,
2643,
2630,
2633.3,
2615,
2612,
2612,
2622.7,
2627.2,
2743,
2743,
2747,
2727,
2734,
2715,
2701.8,
2681.5,
2705,
2690,
2681,
2686,
2670,
2657.7,
2662,
2651.87,
2656.6,
2652,
2655.7,
2691,
2720,
2712.66,
2735,
2731,
2752,
2795,
2776,
2787.5,
2778,
2792,
2780,
2789,
2769.3,
2785,
2792,
2766.15,
2755,
2746,
2747,
2730,
2733,
2743.6,
2746,
2722,
2754,
2742,
2695,
2675,
2703,
2714,
2680,
2783,
2781,
2777.36,
2771,
2769,
2752,
2753,
2671.5,
2763,
2609,
2605,
2765,
2700,
2698,
2700,
2770,
2771,
2779,
2784,
2789,
2778,
2782,
2800,
2722,
2724.3,
2612,
2710,
2723]

NodesHGL=[2849.15,
2848.814,
2848.331,
2847.892,
2846.806,
2845.259,
2844.181,
2843.521,
2842.452,
2841.98,
2840.008,
2839.047,
2833.232,
2831.08,
2827.894,
2823.335,
2816.65,
2829.783,
2829.208,
2766.99,
2764.562,
2762.73,
2758.612,
2757.501,
2735.389,
2733.353,
2733.279,
2731.226,
2730.405,
2772.812,
2828.569,
2825.73,
2806.527,
2794.42,
2793.551,
2785.406,
2784.241,
2782.81,
2780.161,
2778.061,
2775.242,
2734.804,
2717.127,
2730.722,
2729.269,
2728.551,
2728.175,
2677.687,
2711.833,
2699.442,
2695.916,
2694.923,
2686.946,
2686.944,
2725.931,
2686.696,
2680.39,
2680.415,
2680.457,
2680.624,
2680.397,
2680.285,
2681.67,
2680.207,
2678.797,
2679.349,
2774.644,
2773.512,
2773.408,
2756.633,
2752.313,
2745.572,
2739.532,
2735.541,
2730.536,
2728.122,
2726.941,
2726.657,
2725.944,
2725.946,
2725.989,
2726.089,
2726.326,
2726.445,
2727.059,
2739.519,
2785.069,
2785.128,
2785.31,
2785.383,
2785.775,
2823.816,
2821.979,
2819.958,
2818.732,
2817.248,
2816.923,
2815.744,
2815.104,
2814.357,
2814.357,
2799.286,
2798.091,
2796.546,
2795.573,
2794.864,
2794.221,
2793.575,
2793.291,
2792.975,
2794.162,
2794.41,
2728.665,
2729.322,
2729.625,
2729.567,
2728.979,
2798.088,
2800.895,
2802.376,
2803.743,
2804.446,
2806.866,
2807.622,
2734.348,
2810.545,
2677.956,
2679.312,
2796.463,
2729.212,
2729.067,
2728.71,
2841.392,
2841.091,
2839.386,
2838.757,
2835.203,
2833.923,
2832.073,
2815.296,
2792.948,
2772.812,
2680.135,
2785.059,
2764.561]

Nodes=list()

for i in range(NumNodes):
    Var=dict()
    Var['ID']=NodesID[i]
    Var['X']=NodesX[i]
    Var['Y']=NodesY[i]
    Var['Z']=NodesZ[i]
    Var['HGL']=NodesHGL[i]
    Nodes.append(Var)

ReservoirsID=[146]
ReservoirsX=[2697.66]
ReservoirsY=[628.58]
ReservoirsZ=[2850]
ReservoirsHGL=[2850]

Reservoirs=list()

for i in range(NumReservoirs):
    Var=dict()
    Var['ID']=ReservoirsID[i]
    Var['X']=ReservoirsX[i]
    Var['Y']=ReservoirsY[i]
    Var['Z']=ReservoirsZ[i]
    Var['HGL']=ReservoirsHGL[i]
    Reservoirs.append(Var)

PipesID=[1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
69,
70,
71,
72,
73,
74,
75,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150]

PipesNI=[1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
139,
18,
19,
20,
21,
22,
23,
24,
125,
26,
26,
28,
142,
30,
19,
31,
32,
33,
35,
36,
37,
38,
39,
40,
40,
42,
47,
43,
45,
44,
41,
141,
49,
50,
50,
51,
52,
48,
66,
65,
65,
143,
63,
53,
79,
63,
56,
57,
58,
59,
61,
59,
60,
32,
93,
93,
94,
95,
96,
97,
98,
40,
67,
68,
69,
70,
71,
72,
73,
74,
75,
76,
85,
84,
83,
82,
81,
79,
78,
77,
76,
69,
90,
89,
88,
87,
144,
86,
91,
99,
100,
100,
102,
103,
104,
105,
106,
107,
109,
110,
115,
115,
130,
131,
132,
131,
114,
130,
110,
111,
112,
145,
124,
100,
1,
34,
108,
118,
119,
120,
121,
122,
123,
10,
133,
134,
135,
136,
137,
138,
17,
118,
64,
125]

PipesNF=[2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25,
25,
27,
28,
29,
30,
36,
31,
32,
33,
34,
36,
37,
38,
39,
40,
41,
42,
43,
46,
49,
46,
45,
44,
110,
50,
48,
51,
52,
53,
127,
128,
66,
127,
66,
64,
54,
55,
56,
53,
58,
59,
61,
62,
60,
63,
92,
92,
94,
95,
96,
97,
98,
99,
67,
68,
69,
70,
71,
72,
73,
74,
75,
76,
85,
84,
83,
82,
81,
80,
80,
79,
78,
77,
91,
91,
90,
89,
88,
87,
73,
102,
100,
101,
102,
103,
104,
105,
106,
107,
108,
110,
130,
141,
116,
131,
132,
113,
117,
115,
114,
111,
112,
129,
21,
126,
126,
146,
35,
109,
119,
120,
121,
122,
123,
124,
133,
134,
135,
136,
137,
138,
139,
140,
129,
143,
26]

Pipes=list()

for i in range(NumPipes):
    Var=dict()
    Var['ID']=PipesID[i]
    Var['NI']=PipesNI[i]
    Var['NF']=PipesNF[i]
    Pipes.append(Var)

# 2. Network Tracing
    
NodesX=list()
NodesY=list()
NodesZ=list()

for i in range(len(Reservoirs)):
    NodesX.append(Reservoirs[i]['X'])
    NodesY.append(Reservoirs[i]['Y'])
    NodesZ.append(Reservoirs[i]['Z'])
    
for i in range(len(Nodes)):
    NodesX.append(Nodes[i]['X'])
    NodesY.append(Nodes[i]['Y'])
    NodesZ.append(Nodes[i]['Z'])
    
fig = plt.figure()
ax = fig.add_subplot(1, 2, 1, projection='3d')
ax1 = fig.add_subplot(1, 2, 2, projection='3d')
fig.set_size_inches(15, 8)
ax.scatter(NodesX, NodesY, NodesZ, c='black', marker='o', alpha=1)
ax1.scatter(NodesX, NodesY, NodesZ, c='black', marker='o', alpha=1)

for i in range(len(Pipes)):
    NI=Pipes[i]['NI']
    NF=Pipes[i]['NF']
    X=list()
    Y=list()
    Z=list()
    v=None
    for i in range(len(Reservoirs)):
        v=Reservoirs[i]['ID']
        if v==NI:
            X.append(Reservoirs[i]['X'])
            Y.append(Reservoirs[i]['Y'])
            Z.append(Reservoirs[i]['Z'])
            break
    for i in range(len(Nodes)):
        v=Nodes[i]['ID']
        if v==NI:
            X.append(Nodes[i]['X'])
            Y.append(Nodes[i]['Y'])
            Z.append(Nodes[i]['Z'])
            break
    for i in range(len(Reservoirs)):
        v=Reservoirs[i]['ID']
        if v==NF:
            X.append(Reservoirs[i]['X'])
            Y.append(Reservoirs[i]['Y'])
            Z.append(Reservoirs[i]['Z'])
            break
    for i in range(len(Nodes)):
        v=Nodes[i]['ID']
        if v==NF:
            X.append(Nodes[i]['X'])
            Y.append(Nodes[i]['Y'])
            Z.append(Nodes[i]['Z'])
            break
    ax.plot(X,Y,Z,color='darkblue') 
    ax1.plot(X,Y,Z,color='darkblue')
    
# 3. Hydraulic Gradient Surface

HGLX=list()
HGLY=list()
HGLZ=list()

for i in range(len(Pipes)):
    NI=Pipes[i]['NI']
    NF=Pipes[i]['NF']
    for i in range(len(Reservoirs)):
        v=Reservoirs[i]['ID']
        if v==NI:
            Xo=Reservoirs[i]['X']
            Yo=Reservoirs[i]['Y']
            Zo=Reservoirs[i]['HGL']
            HGLX.append(Xo)
            HGLY.append(Yo)
            HGLZ.append(Zo)
            break
    for i in range(len(Nodes)):
        v=Nodes[i]['ID']
        if v==NI:
            Xo=Nodes[i]['X']
            Yo=Nodes[i]['Y']
            Zo=Nodes[i]['HGL']
            HGLX.append(Xo)
            HGLY.append(Yo)
            HGLZ.append(Zo)
            break
    for i in range(len(Reservoirs)):
        v=Reservoirs[i]['ID']
        if v==NF:
            Xf=Reservoirs[i]['X']
            Yf=Reservoirs[i]['Y']
            Zf=Reservoirs[i]['HGL']
            HGLX.append(Xf)
            HGLY.append(Yf)
            HGLZ.append(Zf)
            break
    for i in range(len(Nodes)):
        v=Nodes[i]['ID']
        if v==NF:
            Xf=Nodes[i]['X']
            Yf=Nodes[i]['Y']
            Zf=Nodes[i]['HGL']
            HGLX.append(Xf)
            HGLY.append(Yf)
            HGLZ.append(Zf)
            break 
    for i in range(10):
        HGLX.append(Xo+(i/10)*(Xf-Xo))
        HGLY.append(Yo+(i/10)*(Yf-Yo))
        HGLZ.append(Zo+(i/10)*(Zf-Zo))

Xmax=max(HGLX)
Ymax=max(HGLY)
Xmin=min(HGLX)
Ymin=min(HGLY)

grid_x , grid_y=np.mgrid[Xmin:Xmax:50,Ymin:Ymax:50]

HGLInt1=griddata((HGLX,HGLY),HGLZ,(grid_x,grid_y),method='linear')
HGLInt2=np.nan_to_num(HGLInt1, copy=True, nan=0.0, posinf=None, neginf=None)
surf=ax.plot_surface(grid_x,grid_y,HGLInt1,cmap=cm.YlOrRd,vmin=np.nanmin(HGLInt1), vmax=np.nanmax(HGLInt1),rcount=200, ccount=200)

Nodes1ID=[1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
69,
70,
71,
72,
73,
74,
75,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144,
145]

Nodes1X=[2702.7,
2688.8,
2707.4,
2718.9,
2759.8,
2689.1,
2671.8,
2637.1,
2570.8,
2560.3,
2584.3,
2571.8,
2465.1,
2440.4,
2234.7,
2169.2,
2142.2,
2109.1,
2111.2,
2217.2,
2207.7,
2267.3,
2390.5,
2423.9,
2506.4,
2572.9,
2620.6,
2450.3,
2662.9,
2173.28,
2101.5,
1992.1,
1987.4,
2059.8,
2053.1,
1956.1,
1947.1,
1935,
1914.7,
1890,
2026.8,
1872,
2011.9,
2016.3,
2149.2,
2170.7,
2334.7,
2335.9,
2004.4,
2116.3,
2112.8,
2097,
2083.6,
1989.5,
1744.1,
2085.6,
1928.1,
1843.1,
1779,
1841,
1806.6,
1946.8,
2075.6,
2173.5,
2175.4,
2171,
1769.3,
1650.1,
1616.4,
1595.5,
1542.7,
1510.3,
1398.4,
1372.3,
1498.5,
1475,
1561.8,
1575.9,
1713.9,
1705,
1646.8,
1639.6,
1546.9,
1543.3,
1421.3,
1359.6,
1340,
1399,
1434.7,
1458.4,
1496.6,
1888,
1871.8,
1761.6,
1749.7,
1670.2,
1659.7,
1598.4,
1587.1,
1482.6,
1502,
1409.1,
1382,
1316.5,
1325.5,
1242.5,
1252,
1156.3,
1165.5,
1104.2,
1207.4,
1187.1,
1167.5,
908.4,
1005.6,
1089.7,
933.1,
1358.8,
1308.1,
1296,
1344,
1364.48,
1328.57,
1318.68,
2521.3,
1393.5,
2325.2,
2259.65,
1242.32,
999.2,
990.1,
1079.2,
2583.3,
2570.8,
2464.1,
2439.4,
2233.7,
2168.2,
2141.2,
2069.17,
1103.2,
2179.1,
2173,
1320,
2185]

Nodes1Y=[634.3,
646.5,
671,
693.8,
748.8,
821.1,
887.1,
913.6,
927.3,
956.7,
980.6,
989.7,
1002.7,
972.3,
1014.4,
1059.1,
1171.4,
1309,
1347.1,
1376.5,
1429.7,
1439.1,
1513.2,
1486.7,
1545,
1499.2,
1548.4,
1668.3,
1820.7,
1617.84,
1410.1,
1391.4,
1418.7,
1431.2,
1468.1,
1584.6,
1640,
1715.6,
1728.7,
1858,
1883.8,
1952.2,
1978.1,
1955.9,
1948.2,
1853.6,
1854.1,
2028,
2020.1,
2023.1,
2074.4,
2073.7,
2141.4,
2135.1,
2271.5,
2141.9,
2192.1,
2215.6,
2272.2,
2274.9,
2330.1,
2356.3,
2273.6,
2273.7,
2139.2,
2209.3,
1835.2,
1855.9,
1846.3,
2014.6,
2000,
2106.2,
2069.2,
2152.2,
2196.4,
2256.2,
2269,
2246.5,
2263.3,
2348.9,
2341.9,
2395,
2384.5,
2414.5,
2399.8,
2052.9,
1951.8,
1975.4,
1887.9,
1897.4,
1801.4,
1373.3,
1467.1,
1448.2,
1511.2,
1497.7,
1561.1,
1551.1,
1636.4,
1592.8,
1547.4,
1764.9,
1828.3,
1722.3,
1624.6,
1587.3,
1566.4,
1506.4,
1493.5,
1453.8,
1268.9,
1255.5,
1689.9,
1559.3,
1390,
1263.4,
1735.1,
1126.7,
1285.1,
1361.9,
1393.5,
1406.11,
1490.24,
1515.14,
1491.5,
1555.7,
2149.3,
2205.5,
1109.24,
1621,
1637.4,
1705.2,
980.6,
989.7,
1002.7,
972.3,
1014.4,
1059.1,
1171.4,
1145.89,
1452.8,
1581,
2270,
2000,
1582]

Nodes1Z=[2825,
2822,
2812,
2800,
2782,
2781,
2765,
2763,
2778,
2776,
2770,
2771,
2779,
2784,
2789,
2778,
2782,
2758,
2760,
2735,
2736.25,
2725.71,
2695,
2689,
2663.8,
2653,
2650,
2634,
2619,
2719,
2758,
2783.8,
2780,
2769,
2764.5,
2743.63,
2730,
2721,
2723,
2730,
2710,
2704.66,
2685,
2693.84,
2678,
2688,
2656.79,
2629,
2678,
2661,
2648,
2649,
2640,
2646.25,
2655,
2640,
2632,
2645,
2643,
2630,
2633.3,
2615,
2612,
2612,
2622.7,
2627.2,
2743,
2743,
2747,
2727,
2734,
2715,
2701.8,
2681.5,
2705,
2690,
2681,
2686,
2670,
2657.7,
2662,
2651.87,
2656.6,
2652,
2655.7,
2691,
2720,
2712.66,
2735,
2731,
2752,
2795,
2776,
2787.5,
2778,
2792,
2780,
2789,
2769.3,
2785,
2792,
2766.15,
2755,
2746,
2747,
2730,
2733,
2743.6,
2746,
2722,
2754,
2742,
2695,
2675,
2703,
2714,
2680,
2783,
2781,
2777.36,
2771,
2769,
2752,
2753,
2671.5,
2763,
2609,
2605,
2765,
2700,
2698,
2700,
2770,
2771,
2779,
2784,
2789,
2778,
2782,
2800,
2722,
2724.3,
2612,
2710,
2723]

Nodes1HGL=[2849.904,
2847.782,
2847.736,
2847.729,
2845.211,
2845.144,
2844.612,
2844.583,
2844.566,
2844.521,
2842.548,
2842.547,
2842.486,
2842.444,
2841.301,
2841.283,
2841.146,
2841.408,
2839.807,
2777.589,
2777.588,
2777.588,
2777.574,
2777.573,
2776.205,
2776.163,
2776.144,
2776.083,
2775.871,
2829.757,
2839.731,
2836.891,
2831.207,
2830.663,
2830.662,
2829.76,
2829.732,
2829.731,
2829.731,
2829.715,
2829.713,
2828.648,
2810.971,
2829.706,
2829.706,
2829.706,
2829.704,
2798.214,
2810.963,
2798.572,
2798.571,
2798.571,
2798.227,
2798.227,
2824.55,
2798.227,
2798.215,
2798.215,
2798.215,
2798.215,
2798.215,
2798.186,
2798.216,
2798.216,
2798.216,
2798.216,
2829.714,
2829.713,
2829.713,
2825.433,
2825.39,
2825.384,
2825.384,
2825.382,
2825.193,
2824.577,
2824.575,
2824.575,
2824.55,
2824.551,
2824.551,
2824.551,
2824.551,
2824.551,
2824.577,
2825.38,
2829.612,
2829.612,
2829.612,
2829.612,
2829.713,
2836.881,
2836.878,
2836.861,
2836.856,
2836.832,
2836.83,
2830.293,
2830.289,
2830.192,
2830.192,
2829.727,
2829.727,
2829.719,
2829.718,
2829.716,
2829.711,
2829.711,
2829.711,
2829.683,
2829.683,
2829.683,
2829.652,
2829.652,
2829.656,
2829.655,
2829.652,
2830.079,
2830.079,
2830.178,
2830.178,
2830.179,
2830.18,
2830.191,
2776.165,
2830.192,
2798.214,
2798.214,
2830.004,
2829.652,
2829.652,
2829.652,
2844.495,
2844.194,
2842.489,
2842.485,
2842.062,
2841.973,
2841.571,
2841.144,
2829.679,
2829.757,
2798.216,
2829.602,
2777.588]

Nodes1=list()

for i in range(NumNodes):
    Var=dict()
    Var['ID']=Nodes1ID[i]
    Var['X']=Nodes1X[i]
    Var['Y']=Nodes1Y[i]
    Var['Z']=Nodes1Z[i]
    Var['HGL']=Nodes1HGL[i]
    Nodes1.append(Var)

Reservoirs1ID=[146]
Reservoirs1X=[2697.66]
Reservoirs1Y=[628.58]
Reservoirs1Z=[2850]
Reservoirs1HGL=[2850]

Reservoirs1=list()

for i in range(NumReservoirs):
    Var=dict()
    Var['ID']=Reservoirs1ID[i]
    Var['X']=Reservoirs1X[i]
    Var['Y']=Reservoirs1Y[i]
    Var['Z']=Reservoirs1Z[i]
    Var['HGL']=Reservoirs1HGL[i]
    Reservoirs1.append(Var)

HGLX1=list()
HGLY1=list()
HGLZ1=list()

for i in range(len(Pipes)):
    NI=Pipes[i]['NI']
    NF=Pipes[i]['NF']
    for i in range(len(Reservoirs1)):
        v=Reservoirs1[i]['ID']
        if v==NI:
            Xo=Reservoirs1[i]['X']
            Yo=Reservoirs1[i]['Y']
            Zo=Reservoirs1[i]['HGL']
            HGLX1.append(Xo)
            HGLY1.append(Yo)
            HGLZ1.append(Zo)
            break
    for i in range(len(Nodes1)):
        v=Nodes1[i]['ID']
        if v==NI:
            Xo=Nodes1[i]['X']
            Yo=Nodes1[i]['Y']
            Zo=Nodes1[i]['HGL']
            HGLX1.append(Xo)
            HGLY1.append(Yo)
            HGLZ1.append(Zo)
            break
    for i in range(len(Reservoirs1)):
        v=Reservoirs[i]['ID']
        if v==NF:
            Xf=Reservoirs1[i]['X']
            Yf=Reservoirs1[i]['Y']
            Zf=Reservoirs1[i]['HGL']
            HGLX1.append(Xf)
            HGLY1.append(Yf)
            HGLZ1.append(Zf)
            break
    for i in range(len(Nodes1)):
        v=Nodes[i]['ID']
        if v==NF:
            Xf=Nodes1[i]['X']
            Yf=Nodes1[i]['Y']
            Zf=Nodes1[i]['HGL']
            HGLX1.append(Xf)
            HGLY1.append(Yf)
            HGLZ1.append(Zf)
            break 
    for i in range(10):
        HGLX1.append(Xo+(i/10)*(Xf-Xo))
        HGLY1.append(Yo+(i/10)*(Yf-Yo))
        HGLZ1.append(Zo+(i/10)*(Zf-Zo))

Xmax1=max(HGLX1)
Ymax1=max(HGLY1)
Xmin1=min(HGLX1)
Ymin1=min(HGLY1)

grid_x1 , grid_y1=np.mgrid[Xmin1:Xmax1:50,Ymin1:Ymax1:50]

HGLInt11=griddata((HGLX1,HGLY1),HGLZ1,(grid_x1,grid_y1),method='linear')
HGLInt21=np.nan_to_num(HGLInt11, copy=True, nan=0.0, posinf=None, neginf=None)
surf1=ax1.plot_surface(grid_x1,grid_y1,HGLInt11,cmap=cm.YlOrRd,vmin=np.nanmin(HGLInt11), vmax=np.nanmax(HGLInt11),rcount=200, ccount=200)

#cbaxes = fig.add_axes([0.8, 0.1, 0.03, 0.8]) 
cbar=plt.colorbar(surf,ax=ax,shrink=0.5)
cbar.set_label('HGS [m]', labelpad=-40, y=1.05, rotation=0,fontsize=12)
cbar.ax.tick_params(labelsize=12)
cbar1=plt.colorbar(surf1,ax=ax1,shrink=0.5)
cbar1.set_label('HGS [m]', labelpad=-40, y=1.05, rotation=0,fontsize=12)
cbar1.ax.tick_params(labelsize=12)

#fig.tight_layout()


ax.view_init(10,130)
ax1.view_init(10,130)

ax.set_xlim(Xmin,Xmax)
ax.set_ylim(Ymin,Ymax)
ax.set_xlabel('X [m]',fontsize=12,labelpad=20)
ax.set_ylabel('Y [m]',fontsize=12,labelpad=20)
ax.set_zlabel('Z [m]',fontsize=12,labelpad=20)
ax.set_yticks([800,1200,1600,2000,2400])
ax.set_yticklabels([800,1200,1600,2000,2400],ha='center')
ax.set_xticks([1000,1500,2000,2500])
ax.set_xticklabels([1000,1500,2000,2500],ha='center')
ax.tick_params(axis='both', which='major', labelsize=12,direction='out')

ax1.set_xlim(Xmin1,Xmax1)
ax1.set_ylim(Ymin1,Ymax1)
ax1.set_xlabel('X [m]',fontsize=12,labelpad=20)
ax1.set_ylabel('Y [m]',fontsize=12,labelpad=20)
ax1.set_zlabel('Z [m]',fontsize=12,labelpad=20)
ax1.set_yticks([800,1200,1600,2000,2400])
ax1.set_yticklabels([800,1200,1600,2000,2400],ha='center')
ax1.set_xticks([1000,1500,2000,2500])
ax1.set_xticklabels([1000,1500,2000,2500],ha='center')
ax1.tick_params(axis='both', which='major', labelsize=12,direction='out')

ax.set_title('(a)')
ax1.set_title('(b)')
#fig.subplots_adjust(top=0.95)
plt.tight_layout()
plt.savefig('Fig_9.pdf', dpi=600,bbox_inches='tight')



